// Generated by view binder compiler. Do not edit!
package com.example.myapplication.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.myapplication.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityRegisterBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView alreadyHaveAccount;

  @NonNull
  public final EditText confirmPassword;

  @NonNull
  public final LinearLayout linearLayout;

  @NonNull
  public final EditText passwordET;

  @NonNull
  public final Button signUp;

  @NonNull
  public final EditText usernameET;

  private ActivityRegisterBinding(@NonNull ConstraintLayout rootView,
      @NonNull TextView alreadyHaveAccount, @NonNull EditText confirmPassword,
      @NonNull LinearLayout linearLayout, @NonNull EditText passwordET, @NonNull Button signUp,
      @NonNull EditText usernameET) {
    this.rootView = rootView;
    this.alreadyHaveAccount = alreadyHaveAccount;
    this.confirmPassword = confirmPassword;
    this.linearLayout = linearLayout;
    this.passwordET = passwordET;
    this.signUp = signUp;
    this.usernameET = usernameET;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityRegisterBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityRegisterBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_register, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityRegisterBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.already_have_account;
      TextView alreadyHaveAccount = ViewBindings.findChildViewById(rootView, id);
      if (alreadyHaveAccount == null) {
        break missingId;
      }

      id = R.id.confirm_password;
      EditText confirmPassword = ViewBindings.findChildViewById(rootView, id);
      if (confirmPassword == null) {
        break missingId;
      }

      id = R.id.linear_layout;
      LinearLayout linearLayout = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout == null) {
        break missingId;
      }

      id = R.id.passwordET;
      EditText passwordET = ViewBindings.findChildViewById(rootView, id);
      if (passwordET == null) {
        break missingId;
      }

      id = R.id.sign_up;
      Button signUp = ViewBindings.findChildViewById(rootView, id);
      if (signUp == null) {
        break missingId;
      }

      id = R.id.usernameET;
      EditText usernameET = ViewBindings.findChildViewById(rootView, id);
      if (usernameET == null) {
        break missingId;
      }

      return new ActivityRegisterBinding((ConstraintLayout) rootView, alreadyHaveAccount,
          confirmPassword, linearLayout, passwordET, signUp, usernameET);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
